---
apiVersion: v1
kind: Service
metadata:
  name: backend-astre
  labels:
    name: backend-astre
spec:
  ports:
  - port: 8444
    protocol: TCP
    targetPort: 8444
  selector:
    name: backend-astre
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: backend-astre
  labels:
    name: backend-astre
spec:
  replicas: 1
  selector:
    matchLabels:
      name: backend-astre
  template:
    metadata:
      labels:
        name: backend-astre
    spec:
      containers:
      - command:
        - python3.5
        - astre.py
        env:
        - name: SSL_KEY
          value: /certs/backend-astre-valid.key
        - name: SSL_CRT
          value: /certs/backend-astre-valid.crt
        image: getupcloud/city-sunset:latest
        imagePullPolicy: Always
        name: backend-astre
        ports:
        - containerPort: 8444
        resources: {}
        volumeMounts:
        - name: certs
          mountPath: /certs
      volumes:
      - configMap:
          name: certs
        name: certs
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-sunset
  labels:
    name: frontend-sunset
spec:
  ports:
  - port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    name: frontend-sunset
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: frontend-sunset
  labels:
    name: frontend-sunset
spec:
  replicas: 1
  selector:
    matchLabels:
      name: frontend-sunset
  template:
    metadata:
      labels:
        name: frontend-sunset
    spec:
      containers:
      - command:
        - python3.5
        - sunset.py
        env:
        - name: SSL_KEY
          value: /certs/frontend-sunset.key
        - name: SSL_CRT
          value: /certs/frontend-sunset.crt
        - name: ASTRE_SERVICE
          value: backend-astre.chaosdemo.svc
        - name: ASTRE_SSL_CRT
          value: /certs/ca-bundle-backend-astre-valid.crt
        image: getupcloud/city-sunset:latest
        imagePullPolicy: Always
        name: frontend-sunset
        ports:
        - containerPort: 8443
        resources: {}
        volumeMounts:
        - name: certs
          mountPath: /certs
      volumes:
      - configMap:
          name: certs
        name: certs
